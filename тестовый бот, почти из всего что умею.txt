from aiogram import Bot, Dispatcher, executor, types
from inCommand import ikb, kb, InlineKeyboardMarkup, InlineKeyboardButton
from beton import TOKEN_API

bot = Bot(TOKEN_API)
dp = Dispatcher(bot)

HELP ="""
<em>/help</em> - <b>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</b>
<em>/photo</em> - <b>–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é</b>
<em>/links</em> - <b>–Ω—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç</b>
<em>/vote</em> - <b>–¥–∞—ë—Ç —Ñ–æ—Ç–æ –Ω–∞ –æ—Ü–µ–Ω–∫—É</b>"""

async def on_startup(_):
    print('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—â–µ–Ω–∞, –°—ç—Ä!')

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer(text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –°—ç—Ä!',
                         reply_markup=kb)
    await message.delete()

@dp.message_handler(commands=['links'])
async def command_links(message: types.Message):
    await message.answer(text='–í—ã–±–∏—Ä–µ—Ç–µ –æ–ø—Ü–∏—é ...',
                         reply_markup=ikb)
    await message.delete()

@dp.message_handler(commands=['help'])
async def send_help(message: types.Message):
    await message.answer(text=HELP,
                         reply_markup=kb,
                         parse_mode="HTML")
    await message.delete()

@dp.message_handler(commands=['photo'])
async def send_command(message: types.Message):
    await bot.send_photo(chat_id=message.from_user.id,
                         photo='https://zastavok.net/leto/63383-holmy_zelen_ris.html',
                         reply_markup=kb)
    await message.delete()

@dp.message_handler(commands=['vote'])
async def vote_command(message: types.Message):
    ikb2 =InlineKeyboardMarkup(row_width=2)
    ib3 = InlineKeyboardButton(text='‚ù§Ô∏è',
                               callback_data='like')
    ib4 = InlineKeyboardButton(text='üëé',
                               callback_data='dislike')
    ikb2.add(ib3, ib4)

    await bot.send_photo(chat_id=message.from_user.id,
                         photo='https://i.7fon.org/1000/f64433345.jpg',
                         caption='–ù—Ä–∞–≤–∏—Ç—å—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–∞?',
                         reply_markup=ikb2)

@dp.callback_query_handler()
async def send_query(callback: types.CallbackQuery):
    if callback.data == 'like':
        await callback.answer(text='–£—Ö —Ç—ã, —Ç–µ–±–µ –Ω—Ä–∞–≤–∏–ª—Å—è –º–æ–π –≤—ã–±–æ—Ä')
    await callback.answer(text='–ù–µ —á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –Ω–∞–π–¥—ë–º –¥—Ä—É–≥—É—é')


if __name__ == '__main__':
    executor.start_polling(dispatcher=dp,
                           on_startup=on_startup,
                           skip_updates=True)

__________________________________________________________________________________________________
#–ø–∞–ø–∫–∞ inCommand
__________________________________________________________________________________________________

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup

ikb = InlineKeyboardMarkup(row_width=2)
ib1 = InlineKeyboardButton(text='Yandex',
                           url='https://yandex.ru/search/?text=%D1%8F%D0%BD%D0%B4%D0%B5%D0%BA%D1%81&clid=2411726&lr=10991')
ib2 = InlineKeyboardButton(text='YouTube',
                           url='https://www.youtube.com/@KINOKOS')

ikb.add(ib1, ib2)
kb = ReplyKeyboardMarkup(resize_keyboard=True,
                         one_time_keyboard=True)
v1 = KeyboardButton(text='/links')
v2 = KeyboardButton(text='/help')
v3 = KeyboardButton(text='/photo')
v4 = KeyboardButton(text='/vote')
kb.add(v1).insert(v2).add(v3).insert(v4)